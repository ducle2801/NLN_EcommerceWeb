{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers';\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer,\n  auth: authReducer,\n  user: userReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  allOrders: allOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  order: orderReducer,\n  newReview: newReviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\nexport default store;","map":{"version":3,"sources":["D:/Nhom3_IVS_ThucTapChuyenNganh/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","newProductReducer","productReducer","productDetailsReducer","newReviewReducer","productReviewsReducer","reviewReducer","authReducer","userReducer","forgotPasswordReducer","allUsersReducer","userDetailsReducer","cartReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrdersReducer","orderReducer","reducer","products","productDetails","newProduct","product","productReviews","review","auth","user","allUsers","userDetails","forgotPassword","cart","newOrder","myOrders","allOrders","orderDetails","order","newReview","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middlware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,cAA7C,EAA6DC,qBAA7D,EAAoFC,gBAApF,EAAsGC,qBAAtG,EAA6HC,aAA7H,QAAkJ,4BAAlJ;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,qBAAnC,EAA0DC,eAA1D,EAA2EC,kBAA3E,QAAqG,yBAArG;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,mBAA3C,EAAgEC,gBAAhE,EAAkFC,YAAlF,QAAsG,0BAAtG;AAEA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;AAC5BuB,EAAAA,QAAQ,EAAEnB,eADkB;AAE5BoB,EAAAA,cAAc,EAAEjB,qBAFY;AAG5BkB,EAAAA,UAAU,EAAEpB,iBAHgB;AAI5BqB,EAAAA,OAAO,EAAEpB,cAJmB;AAK5BqB,EAAAA,cAAc,EAAElB,qBALY;AAM5BmB,EAAAA,MAAM,EAAElB,aANoB;AAO5BmB,EAAAA,IAAI,EAAElB,WAPsB;AAQ5BmB,EAAAA,IAAI,EAAElB,WARsB;AAS5BmB,EAAAA,QAAQ,EAAEjB,eATkB;AAU5BkB,EAAAA,WAAW,EAAEjB,kBAVe;AAW5BkB,EAAAA,cAAc,EAAEpB,qBAXY;AAY5BqB,EAAAA,IAAI,EAAElB,WAZsB;AAa5BmB,EAAAA,QAAQ,EAAElB,eAbkB;AAc5BmB,EAAAA,QAAQ,EAAElB,eAdkB;AAe5BmB,EAAAA,SAAS,EAAEjB,gBAfiB;AAgB5BkB,EAAAA,YAAY,EAAEnB,mBAhBc;AAiB5BoB,EAAAA,KAAK,EAAElB,YAjBqB;AAkB5BmB,EAAAA,SAAS,EAAEhC;AAlBiB,CAAD,CAA/B;AAsBA,IAAIiC,YAAY,GAAG;AACfP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADK,GAEL,EAHJ;AAIFG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,GAER;AANJ;AADS,CAAnB;AAWA,MAAMI,SAAS,GAAG,CAAC9C,KAAD,CAAlB;AACA,MAAM+C,KAAK,GAAGlD,WAAW,CAACuB,OAAD,EAAUmB,YAAV,EAAwBtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,SAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}